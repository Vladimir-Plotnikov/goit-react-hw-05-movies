{"version":3,"file":"static/js/321.e29f33c9.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","components/Notification/Notification.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.js","services/movieApi.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Image = styled.img`\n  height: 365px;\n  object-fit: cover;\n`;\n\nconst MovieTitle = styled.div`\ndisplay: flex;\n`\n\nconst Item = styled(NavLink)`\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    transform: scale(1.1);\n    color: #ec9706;\n  }\n`;\n\nexport{Image, Item, MovieTitle}","import { useLocation } from 'react-router-dom';\nimport defaultPicture from '../../images/default-movie.jpeg';\nimport {Image, Item, MovieTitle} from '../MovieList/MovieList.styled'\n\nexport const MovieList = ({ items }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {items.map(({ id, poster_path, title }) => (\n        <li key={id}>\n          <Item to={`/movies/${id}`} state={{ from: location }}>\n            <Image\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultPicture\n              }\n              alt={title}\n            />\n            <MovieTitle>\n              <p>{title}</p>\n            </MovieTitle>\n          </Item>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","export const Notification = ({ message }) => {\n    return <p>{message}</p>;\n};","import styled from 'styled-components';\n\nconst Section = styled.section`\ndisplay: flex;\n  padding-top: 36px;\n  padding-bottom: 36px;\n  text-align: center;\n`;\n\nconst Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 1280px;\n`;\n\nconst Form = styled.form`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  margin: 0 auto;\n  margin-bottom: 36px;\n  width: 510px;\n  border-radius: 15px;\n`;\nconst Field = styled.div`\n  position: relative;\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  top: 50%;\n  left: 16px;\n  transform: translateY(-50%);\n  padding: 0 4px;\n  font-size: 16px;\n  color: #fefefe;\n  pointer-events: none;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  Input:focus ~ &,\n  Input:not(:placeholder-shown) ~ & {\n    transform: translateY(-34px) scale(0.8);\n    color: #ec9706;\n    background-color: #212121;\n  }\n  Input:not(:focus) ~ & {\n    color: #fefefe;\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  height: 50px;\n  padding: 8px 16px;\n  padding-right: 42px;\n  font-size: 16px;\n  letter-spacing: 1.4px;\n  color: #ec9706;\n  background-color: transparent;\n  border: 1px solid #fefefe;\n  border-radius: 10px;\n  outline: none;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:focus {\n    border-color: #ec9706;\n    box-shadow: 0px 8px 12px -4px rgba(236, 151, 6, 0.32);\n  }\n  &:not(:focus) {\n    color: #fefefe;\n  }\n`;\n\nconst Button = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 16px;\n  transform: translateY(-50%);\n  padding: 0;\n  color: #fefefe;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    color: #ec9706;\n  }\n`;\n\nexport { Section, Container, Form, Field, Label, Input, Button };","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getMovieByQuery } from \"services/movieApi\";\nimport { Notification } from \"components/Notification/Notification\";\nimport { Hearts } from \"react-loader-spinner\";\nimport { MovieList } from \"components/MovieList/MovieList\";\nimport {\n  Section,\n  Container,\n  Form,\n  Field,\n  Label,\n  Input,\n  Button,\n} from './Movies.styled';\n\nconst Status = {\n    IDLE: 'idle',\n    PENDING: 'pending',\n    REJECTED: 'rejected',\n    RESOLVED: 'resolved'\n};\n\nconst Movies = () => {\n    const [query, setQuery] = useState('');\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const [status, setStatus] = useState(Status.IDLE);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const queryParams = searchParams.get('query')\n\n    useEffect(() => {\n        if (!queryParams) {\n            return\n        }\n        setStatus(Status.PENDING)\n        getMovieByQuery(queryParams)\n            .then(({ results }) => {\n                if (!results.length) {\n                    setError(`No such a movie by this ${queryParams}`)\n                    setStatus(Status.REJECTED)\n                }\n                setMovies(results);\n                setStatus(Status.RESOLVED);\n            }).catch(error => {\n                setError(error)\n                setStatus(Status.REJECTED)\n            })\n    }, [queryParams]);\n\n    const handleChange = e => {\n        const { value } = e.currentTarget;\n        setQuery(value)\n    }\n\n    const submitHandler = e => {\n        e.preventDefault();\n\n        const searchQuery = query.trim().toLowerCase()\n\n        if (!searchQuery) {\n            alert('WOWOWOW SEARCH BOX CAN NOT BE EMPTY')\n            return\n        }\n    \n        setSearchParams({ query: searchQuery })\n    \n        setQuery('')\n    }\n\n    return (\n        <main>\n            <Section>\n                <Container>\n                    <Form onSubmit={submitHandler}>\n                        <Field>\n                            <Input\n                                type=\"text\"\n                                name=\"query\"\n                                value={query}\n                                autoComplete=\"off\"\n                                placeholder=\" \"\n                                onChange={handleChange}\n                            />\n                            <Label>Search movies</Label>\n                        </Field>\n                        <Button type=\"submit\">SEARCH</Button>\n                    </Form>\n                    {status === Status.PENDING &&\n                        <div>\n                            <Hearts\n                                height=\"300\"\n                                width=\"300\"\n                                color=\"#ec9706\"\n                                ariaLabel=\"hearts-loading\"\n                                wrapperStyle={{}}\n                                wrapperClass=\"\"\n                                visible={true}\n                            />\n                        </div>}\n                    {status === Status.REJECTED && <Notification message={error} />}\n                    {status === Status.RESOLVED && <MovieList items={movies} />}\n                </Container>\n            </Section>\n        </main>\n    )\n};\n\nexport default Movies;\n\n","const BASE_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = 'ade6c0d166c517e1fe622025fc12c476'\n\nasync function getTrendingMovies() {\n    const response = await fetch(\n        `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    if (response.ok) {\n        return await response.json()\n    }\n    return await Promise.reject(\n        new Error(\"Oops, something went wrong... We can't load trending movies :(\")\n    );\n}\n\nasync function getMovieById(id) {\n    const response = await fetch(\n        `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n    if (response.ok) {\n        return await response.json();\n    }\n    return await Promise.reject(\n        new Error('We are sorry, but we did not find any information about this movie')\n    )\n}\n\nasync function getMovieByCast(id) {\n    const response = await fetch(\n        `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    )\n    if (response.ok) {\n        return await response.json()\n    }\n    return await Promise.reject(\n        new Error('We are sorry, but we did not fint any information about this movie by cast')\n    )\n};\n\nasync function getMovieByReviews(id) {\n    const response = await fetch(\n        `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n    )\n    if (response.ok) {\n        return await response.json()\n    }\n    return Promise.reject(\n        new Error('We dont have any reviews for this movie')\n    )\n}\n\nasync function getMovieByQuery(query) {\n    const response = await fetch(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    if (response.ok) {\n        return await response.json();\n    }\n    return await Promise.reject(\n        new Error(`No results containing ${query} were found`)\n    );\n}\n\nexport {\n    getTrendingMovies,\n    getMovieByCast,\n    getMovieById,\n    getMovieByQuery,\n    getMovieByReviews,\n}"],"names":["Image","styled","MovieTitle","Item","NavLink","MovieList","items","location","useLocation","map","id","poster_path","title","to","state","from","src","defaultPicture","alt","Notification","message","Section","Container","Form","Field","Label","Input","Button","Status","useState","query","setQuery","movies","setMovies","error","setError","status","setStatus","useSearchParams","searchParams","setSearchParams","queryParams","get","useEffect","getMovieByQuery","then","results","length","catch","onSubmit","e","preventDefault","searchQuery","trim","toLowerCase","alert","type","name","value","autoComplete","placeholder","onChange","currentTarget","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","BASE_URL","API_KEY","getTrendingMovies","fetch","response","ok","json","Promise","reject","Error","getMovieById","getMovieByCast","getMovieByReviews"],"sourceRoot":""}