{"version":3,"file":"static/js/526.90e1f866.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","components/Notification/Notification.js","pages/Home/Home.styled.js","pages/Home/Home.js","services/movieApi.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Image = styled.img`\n  height: 365px;\n  object-fit: cover;\n`;\n\nconst MovieTitle = styled.div`\ndisplay: flex;\n`\n\nconst Item = styled(NavLink)`\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    transform: scale(1.1);\n    color: #ec9706;\n  }\n`;\n\nexport{Image, Item, MovieTitle}","import { useLocation } from 'react-router-dom';\nimport defaultPicture from '../../images/default-movie.jpeg';\nimport {Image, Item, MovieTitle} from '../MovieList/MovieList.styled'\n\nexport const MovieList = ({ items }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {items.map(({ id, poster_path, title }) => (\n        <li key={id}>\n          <Item to={`/movies/${id}`} state={{ from: location }}>\n            <Image\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultPicture\n              }\n              alt={title}\n            />\n            <MovieTitle>\n              <p>{title}</p>\n            </MovieTitle>\n          </Item>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","export const Notification = ({ message }) => {\n    return <p>{message}</p>;\n};","import styled from 'styled-components';\n\nconst Section = styled.section`\n  padding-top: 36px;\n  padding-bottom: 36px;\n  // text-align: center;\n`;\n\nconst Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 1280px;\n`;\n\nconst Heading = styled.h1`\n  margin-bottom: 32px;\n  font-size: 25px;\n`;\n\nexport { Section, Container, Heading };","import { useState, useEffect } from \"react\";\nimport { getTrendingMovies } from \"services/movieApi\";\nimport { Hearts } from \"react-loader-spinner\";\nimport { Notification } from \"components/Notification/Notification\";\nimport { MovieList } from \"components/MovieList/MovieList\";\nimport { Container, Heading, Section } from \"./Home.styled\";\n\nconst Status = {\n    PENDING: 'pending',\n    RESOLVED: 'resolved',\n    REJECTED: 'rejected',\n}\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const [status, setStatus] = useState(Status.PENDING);\n\n    useEffect(() => {\n        getTrendingMovies()\n            .then(({ results }) => {\n                if (!results.length) {\n                    setStatus(Status.REJECTED);\n                    setError(\n                        \"Oops, something went wrong... We can't load trending movies :(\"\n                    );\n                    return;\n                }\n                setMovies(results);\n                setStatus(Status.RESOLVED);\n            })\n            .catch(error => {\n                setError(error);\n                setStatus(Status.REJECTED);\n            });\n    }, []);\n\n    return (\n        <main>\n            <Section>\n                <Container>\n                    <Heading>Trending today</Heading>\n                    {status === Status.PENDING && <div>\n                         <Hearts \n            height=\"300\"\n            width=\"300\"\n            color=\"#ec9706\"\n            ariaLabel=\"hearts-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n          />\n                    </div>}\n                    {status === Status.REJECTED &&<Notification message={error}/> }\n                    {status === Status.RESOLVED && <MovieList items={movies} />}\n                </Container>\n            </Section>\n        </main>\n    )\n}\n\nexport default Home;","const BASE_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = 'ade6c0d166c517e1fe622025fc12c476'\n\nasync function getTrendingMovies() {\n    const response = await fetch(\n        `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    if (response.ok) {\n        return await response.json()\n    }\n    return await Promise.reject(\n        new Error(\"Oops, something went wrong... We can't load trending movies :(\")\n    );\n}\n\nasync function getMovieById(id) {\n    const response = await fetch(\n        `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n    if (response.ok) {\n        return await response.json();\n    }\n    return await Promise.reject(\n        new Error('We are sorry, but we did not find any information about this movie')\n    )\n}\n\nasync function getMovieByCast(id) {\n    const response = await fetch(\n        `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    )\n    if (response.ok) {\n        return await response.json()\n    }\n    return await Promise.reject(\n        new Error('We are sorry, but we did not fint any information about this movie by cast')\n    )\n};\n\nasync function getMovieByReviews(id) {\n    const response = await fetch(\n        `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n    )\n    if (response.ok) {\n        return await response.json()\n    }\n    return Promise.reject(\n        new Error('We dont have any reviews for this movie')\n    )\n}\n\nasync function getMovieByQuery(query) {\n    const response = await fetch(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    if (response.ok) {\n        return await response.json();\n    }\n    return await Promise.reject(\n        new Error(`No results containing ${query} were found`)\n    );\n}\n\nexport {\n    getTrendingMovies,\n    getMovieByCast,\n    getMovieById,\n    getMovieByQuery,\n    getMovieByReviews,\n}"],"names":["Image","styled","MovieTitle","Item","NavLink","MovieList","items","location","useLocation","map","id","poster_path","title","to","state","from","src","defaultPicture","alt","Notification","message","Section","Container","Heading","Status","useState","movies","setMovies","error","setError","status","setStatus","useEffect","getTrendingMovies","then","results","length","catch","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","BASE_URL","API_KEY","fetch","response","ok","json","Promise","reject","Error","getMovieById","getMovieByCast","getMovieByReviews","getMovieByQuery","query"],"sourceRoot":""}