{"version":3,"file":"static/js/806.4567bb6d.chunk.js","mappings":"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","sources":["components/Notification/Notification.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","services/movieApi.js"],"sourcesContent":["export const Notification = ({ message }) => {\n    return <p>{message}</p>;\n};","import styled from 'styled-components';\n\nconst Blockquote = styled.blockquote`\n  position: relative;\n  font-size: 16px;\n  font-style: italic;\n  letter-spacing: 1px;\n  line-height: 1.2;\n  text-align: center;\n  p {\n    margin-top: 16px;\n  }\n  svg {\n    margin-right: 16px;\n  }\n  cite {\n    font-style: normal;\n  }\n`;\n\nexport { Blockquote };","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieByReviews } from \"services/movieApi\";\nimport { Notification } from \"components/Notification/Notification\";\nimport { Hearts } from \"react-loader-spinner\";\nimport { Blockquote } from './Reviews.styled';\n\nconst Status = {\n    IDLE: 'idle',\n    PENDING: 'pending',\n    REJECTED: 'rejected',\n    RESOLVED: 'resolved',\n}\n\nconst Reviews = () => {\n\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState(null);\n    const [error, setError] = useState(null);\n    const [status, setStatus] = useState(Status.IDLE)\n\n    useEffect(() => {\n        setStatus(Status.PENDING);\n        getMovieByReviews(movieId)\n            .then(({ results }) => {\n                if (!results.length) {\n                    setError(\n                        'We dont have any reveiws on this movie'\n                    )\n                    setStatus(Status.REJECTED);\n                    return\n                }\n                setReviews(results)\n                setStatus(Status.RESOLVED)\n            })\n            .catch(error => {\n                setError(error);\n                setStatus(Status.error)\n            })\n    }, [movieId])\n\n    return (\n        <>\n            {status === Status.PENDING &&\n                <div>\n                    <Hearts\n                        height=\"300\"\n                        width=\"300\"\n                        color=\"#ec9706\"\n                        ariaLabel=\"hearts-loading\"\n                        wrapperStyle={{}}\n                        wrapperClass=\"\"\n                        visible={true}\n                    />\n                </div>}\n            {status === Status.REJECTED && <Notification message={error} />}\n            {status === Status.RESOLVED && (\n                <ul>\n                    {reviews.map(({ id, author, content, url }) => (\n                        <li key={id}>\n                            <Blockquote cite={url}>\n                                <cite>Author:{author}</cite>\n                                <p>{content}</p>\n                            </Blockquote>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </>\n    );\n}\nexport default Reviews;","const BASE_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = 'ade6c0d166c517e1fe622025fc12c476'\n\nasync function getTrendingMovies() {\n    const response = await fetch(\n        `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    if (response.ok) {\n        return await response.json()\n    }\n    return await Promise.reject(\n        new Error(\"Oops, something went wrong... We can't load trending movies :(\")\n    );\n}\n\nasync function getMovieById(id) {\n    const response = await fetch(\n        `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n    );\n    if (response.ok) {\n        return await response.json();\n    }\n    return await Promise.reject(\n        new Error('We are sorry, but we did not find any information about this movie')\n    )\n}\n\nasync function getMovieByCast(id) {\n    const response = await fetch(\n        `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n    )\n    if (response.ok) {\n        return await response.json()\n    }\n    return await Promise.reject(\n        new Error('We are sorry, but we did not fint any information about this movie by cast')\n    )\n};\n\nasync function getMovieByReviews(id) {\n    const response = await fetch(\n        `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n    )\n    if (response.ok) {\n        return await response.json()\n    }\n    return Promise.reject(\n        new Error('We dont have any reviews for this movie')\n    )\n}\n\nasync function getMovieByQuery(query) {\n    const response = await fetch(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    if (response.ok) {\n        return await response.json();\n    }\n    return await Promise.reject(\n        new Error(`No results containing ${query} were found`)\n    );\n}\n\nexport {\n    getTrendingMovies,\n    getMovieByCast,\n    getMovieById,\n    getMovieByQuery,\n    getMovieByReviews,\n}"],"names":["Notification","message","Blockquote","styled","Status","IDLE","PENDING","REJECTED","RESOLVED","movieId","useParams","useState","reviews","setReviews","error","setError","status","setStatus","useEffect","getMovieByReviews","then","results","length","catch","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","map","id","author","content","url","cite","BASE_URL","API_KEY","getTrendingMovies","fetch","response","ok","json","Promise","reject","Error","getMovieById","getMovieByCast","getMovieByQuery","query"],"sourceRoot":""}